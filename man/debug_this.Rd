% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grade_this.R
\name{debug_this}
\alias{debug_this}
\title{Debug an exercise submission}
\usage{
debug_this(check_env = parent.frame())
}
\arguments{
\item{check_env}{A grade checking environment. You can use
\code{\link[=mock_this_exercise]{mock_this_exercise()}} to prepare a mocked exercise submission
environment. Otherwise, you don't need to use or set this argument.}
}
\value{
Returns a neutral grade containing a message that includes any
and all information available about the exercise and the current
submission. The output lets you visually explore the objects available for
use within your \code{\link[=grade_this]{grade_this()}} grading code.
}
\description{
When used in a \verb{*-check} chunk or inside \code{\link[=grade_this]{grade_this()}}, \code{debug_this()}
displays in the \pkg{learnr} tutorial a complete listing of the variables
and environment available for checking. This can be helpful when you need
to debug an exercise and a submission.
}
\section{Debugging exercises}{


\code{debug_this()} gives you a few ways to see the objects that are
available inside \code{\link[=grade_this]{grade_this()}} for you to use when grading exercise
submissions. Suppose we have this example exercise:\if{html}{\out{<div class="sourceCode markdown">}}\preformatted{```\{r example-setup\}
x <- 1
```

```\{r example, exercise = TRUE\}
# user submits
y <- 2
x + y
```

```\{r example-solution\}
x + 3
```
}\if{html}{\out{</div>}}

\if{html}{
The debug output will look like the following when used as described
below.

\Sexpr[echo=FALSE,results=rd,stage=build]{
submission <- gradethis::mock_this_exercise("# user submits\nx + 2", "x + 3", setup_exercise = "x <- 1", .label = "example")
paste("\\\out{\n<blockquote>", gradethis::debug_this(submission)$message, "</blockquote>}", sep = "\n")
}
}
\subsection{Always debug}{

The first method is the most straight-forward.
Inside the \verb{*-check} or \verb{*-error-check} chunks for your exercise,
simply call \code{debug_this()}:\preformatted{```\{r example-check\}
debug_this()
```
}

Every time you submit code for feedback via \strong{Submit Answer},
the debug information will be printed.
}

\subsection{Debug specific cases}{

On the other hand, if you want to debug a specific submission,
such as a case where a submission isn't matching any of your current grading conditions,
you can call \code{debug_this()} wherever you like inside \code{\link[=grade_this]{grade_this()}}.\preformatted{```\{r example-check\}
grade_this(\{
  pass_if_equal(3, "Good work?")
  
  # debug the submission if it is somehow equal to 2
  if (.result == 2) \{
    debug_this()
  \}
\})
```
}
}

\subsection{Debug default fail condition}{

It's common to have the grade-checking code
default to an incorrect grade with code feedback
by calling \code{fail()} at the end of the checking code in \code{\link[=grade_this]{grade_this()}}.
During development of a tutorial,
you may want to have this default \code{fail()} return the debugging information
rather than a failure.

By setting the global option \code{gradethis.fail} to use \code{debug_this()},\preformatted{```\{r setup\}
library(learnr)
library(gradethis)
gradethis_setup()

option(gradethis.fail = "\{debug_this()\}")
```
}

you can see the values that are available to you during the submission check
whenever your test submissions pass through your other checks.\preformatted{```\{r example-check\}
grade_this(\{
  pass_if_equal(3, "Good work?")
  
  fail()
\})
```
}

Don't forget to reset or unset the \code{gradethis.fail} option
when you're done working on your tutorial.
}
}

\examples{
# Suppose we have an exercise (guess the number 42). Mock a submission:
submission <- mock_this_exercise(.user_code = 40, .solution_code = 11 + 31)

# Call `debug_this()` inside your *-check chunk, is equivalent to
debug_this()(submission)$message

# The remaining examples produce equivalent output
\dontrun{
  # Or you can call `debug_this()` inside a `grade_this()` call
  # at the point where you want to get debug feedback.
  grade_this({
    pass_if_equal(42, "Good stuff!")
  
    # Find out why this is failing??
    debug_this()
  })(submission)
  
  # Set default `fail()` message to show debug information
  # (for tutorial development only!)
  old_opts <- options(gradethis.fail = "{debug_this()}")
  
  grade_this({
    pass_if_equal(42, "Good stuff!")
  
    fail()
  })(submission)
  
  # default fail() will show debug until you reset gradethis.fail option
  options(old_opts)
}

}
