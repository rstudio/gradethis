% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_object.R
\name{user_object}
\alias{user_object}
\alias{user_object_get}
\alias{solution_object_get}
\alias{user_object_exists}
\alias{solution_object_exists}
\alias{user_object_list}
\alias{solution_object_list}
\title{Functions for interacting with objects created by student and solution code}
\usage{
user_object_get(x, mode = "any", ..., check_env = parent.frame())

solution_object_get(x, mode = "any", ..., check_env = parent.frame())

user_object_exists(x, mode = "any", ..., check_env = parent.frame())

solution_object_exists(x, mode = "any", ..., check_env = parent.frame())

user_object_list(
  mode = "any",
  exclude_envir = .envir_prep,
  ...,
  check_env = parent.frame()
)

solution_object_list(
  mode = "any",
  exclude_envir = .envir_prep,
  ...,
  check_env = parent.frame()
)
}
\arguments{
\item{x}{An object name, given as a quoted \link{character} string.}

\item{mode}{character specifying the \code{\link{mode}} of objects to
    consider.  Passed to \code{\link{exists}} and \code{\link{get}}.}

\item{envir}{environment to use, see \code{\link{ls}}.}

\item{exclude_envir}{An \link{environment}.
Objects that appear in \code{exclude_envir} will be excluded from results.
Defaults to \code{\link{.envir_prep}}.
Use \code{exclude_envir = NULL} to include all objects.}

\item{...}{Additional arguments passed to underlying functions:
\itemize{
\item For \code{user_object_exists()} and \code{solution_object_exists()}, \code{\link[=exists]{exists()}}
\item For \code{user_object_get()} and \code{solution_object_get()}, \code{\link[=get]{get()}}
\item For \code{user_object_list()} and \code{solution_object_list()},
\code{\link[utils:ls_str]{ls.str()}}
}}

\item{check_env}{The \link{environment} from which to retrieve
\code{\link{.envir_result}} and \code{\link{.envir_prep}}.
Most users of \pkg{gradethis} will not need to use this argument.}
}
\value{
For \code{user_object_get()} and \code{solution_object_get()}, the object.
If the object is not found, an error.

For \code{user_object_exists()} and \code{solution_object_exists()},
a \code{\link{TRUE}}/\code{\link{FALSE}} value.

For \code{user_object_list()} and \code{solution_object_list()},
a \link{character} vector giving the names of the objects
created by the student or solution code.
}
\description{
Functions for interacting with objects created by student and solution code
}
\examples{
user_code <- quote({
  # ```{r example}
  x <- "I'm student code!"
  y <- list(1, 2, 3)
  z <- function() print("Hello World!")
  # ```
})

solution_code <- quote({
  # ```{r example-solution}
  x <- "I'm solution code!"
  y <- list("a", "b", "c")
  z <- function() print("Goodnight Moon!")
  # ```
})

exercise <- mock_this_exercise(!!user_code, !!solution_code)

with_exercise(exercise, user_object_list())
with_exercise(exercise, user_object_exists("x"))
with_exercise(exercise, user_object_get("x"))

with_exercise(exercise, solution_object_list())
with_exercise(exercise, solution_object_exists("x"))
with_exercise(exercise, solution_object_get("x"))

# Use `mode` to find only objects of a certain type ----

with_exercise(exercise, user_object_list(mode = "character"))
with_exercise(exercise, user_object_list(mode = "list"))
with_exercise(exercise, user_object_list(mode = "function"))

with_exercise(exercise, user_object_exists("x", mode = "character"))
with_exercise(exercise, user_object_exists("y", mode = "character"))

with_exercise(exercise, user_object_get("z", mode = "function"))

# By default, `user_object_list()` ignores objects created by setup chunks ----

setup_code <- rlang::expr({
  # ```{r example-setup}
  setup_data <- mtcars
  # ```
})

setup_exercise <- mock_this_exercise(
  !!user_code, !!solution_code, setup_exercise = !!setup_code
)

with_exercise(setup_exercise, user_object_list())

## You can disable this by setting `exclude_envir = NULL` ----

with_exercise(setup_exercise, user_object_list(exclude_envir = NULL))
}
